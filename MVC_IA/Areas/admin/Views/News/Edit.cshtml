@model MVC_IA.Models.News

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/admin/Views/Shared/_BackLayout.cshtml";
}

<h2>Edit</h2>
@*使用Request.QueryString["..."]來傳送資料時需在From設定new{***=Request.QueryString["..."]}*@
@using (Html.BeginForm("Edit", "News", new { page = Request.QueryString["page"] }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>News</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="photo" id="photo" />
                <img src="~/UpFile/images/s@(Model.Photo)" />
                @Html.HiddenFor(model => model.Photo)
            </div>
        </div>

        @Html.HiddenFor(model => model.Date)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Introduction, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Introduction, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Introduction, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Content, new { @class = "ckeditor" })
                @*@Html.TextAreaFor(model => model.Content, new { @class = "ckeditor" })*@

                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Top, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Top, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Top, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
    <script>
        var editor = CKEDITOR.replace();
        CKFinder.SetupCKEditor(editor, '/ckfinder/');
    </script>
}


<div>
    @Html.ActionLink("Back to List", "Index")
</div>
